#!/usr/bin/python
# Subversion Configuration System Init program

import ConfigParser
import sys
import os
import scslib
from scslib import inform
from optparse import OptionParser

def main():
	## Require root
	scslib.requireRoot()

	## Option parser
	parser = OptionParser()
	parser.add_option('-s','--svn',dest='svn',default=None,help='The scs server subversion url (Required)')
	parser.add_option('-d','--dir',dest='dir',default="/opt/scs/",help='Directory where scs stores metadata (Optional)')
	parser.add_option('-m','--metadata',dest='meta',default=None,help='The server metadata url (Required)')
	parser.add_option('-c','--config-file',dest='config',default="/etc/scs.conf",help='Set the configuration file to use (Optional)')	
	parser.add_option('-u','--username',dest='username',default=None,help='The HTTP username when using a http svn url (Optional)')	
	parser.add_option('-p','--password',dest='password',default=None,help='The HTTP password when using a http svn url (Optional)')
	parser.add_option('-a','--mailaddr',dest='mailaddr',default=None,help='Address to send alert e-mails to (Optional)')
	parser.add_option('-r','--smtprelay',dest='smtprelay',default=None,help='SMTP server, if not set defaults to localhost (Optional)')

	(options, args) = parser.parse_args()
	
	if options.svn == None:
		parser.print_help()				
		inform.fatal("You must specify a subversion url")
	if options.meta == None:
		parser.print_help()			
		inform.fatal("You must specify a metadata url")
		
	## TODO validate the metadata url
	## TODO validate the scs server subversion url
	
	## Validate the directory
	if os.path.exists(options.dir):
		inform.fatal("The scs metadata directory already exists")
	else:
		try:
			os.makedirs(options.dir)
			os.mkdir(os.path.join(options.dir,'client'))			
			os.mkdir(os.path.join(options.dir,'client','channels'))
			os.mkdir(os.path.join(options.dir,'client','packages'))
			open(os.path.join(options.dir,'client','client.meta'),'w')
		except (OSError, IOError) as error:
			inform.fatal('Failed to initalise the SCS client. Error was: ' + str(error))
			
		config = ConfigParser.RawConfigParser()
		config.add_section('client')
		config.add_section('main')		
		config.set('main','data root',options.dir)		
		config.set('client','svn url',options.svn)
		config.set('client','metadata url',options.meta)
		
		if not options.username == None:
			config.set('client','svn username',options.username)

		if not options.password == None:
			config.set('client','svn password',options.password)

		if not options.mailaddr == None:
			config.set('client','notify email',options.mailaddr)

		if not options.smtprelay == None:
			config.set('client','smtp server',options.smtprelay)

		try:
			with open(options.config,'wb') as configfile:
				config.write(configfile)
		except (OSError, IOError) as error:
			inform.fatal('Failed to write to config file. Error was: ' + str(error))
			
		## Change file mode to 0600 for SECURITYZ
		os.chmod(options.config,0600)
	
if __name__ == "__main__":
	if sys.version < '2.6':
		sys.stderr.write('Python 2.6 or greater is required for this program. Exiting.')
	else:
	    main()	
